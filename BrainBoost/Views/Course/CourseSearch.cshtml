@model IEnumerable<BrainBoost.Models.Course>

@{
    ViewData["Title"] = "Search courses";
    var searchF = ViewData["Search"];
}
<!DOCTYPE html>
<html>
<head>
    <title>Course Management</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <style>
        .search-container {
            margin-bottom: 10px;
        }

        .input-group {
            width: 100%;
        }

        .form-control {
            width: calc(100% - 90px); /* Adjust the width as per your needs */
            flex-grow: 1;
        }

        .button.active {
            background-color: #4e73df;
            color: white;
        }

        .button:hover {
            background-color: #858796;
        }

        .clickable-row {
            cursor: pointer;
        }
    </style>
</head>
<body>
    <h1>Course search</h1>
    <!-- Search field and button -->
    <div class="search-container">
        <form asp-controller="Course" asp-action="Search" method="get">
            <div class="input-group">
                @if (!searchF.Equals(""))
                {
                    <input type="text" id="searchInput" name="searchString" placeholder="Search for a course..." class="form-control" value=@searchF>
                }
                else
                {
                    <input type="text" id="searchInput" name="searchString" placeholder="Search for a course..." class="form-control">
                }
                <div class="input-group-append">
                    <button type="submit" class="btn button active">Search</button>
                </div>
            </div>
        </form>
    </div>

    <!-- Table displaying active courses -->
    <div id="courses">
        <table class="table table-striped table-bordered">
            <colgroup>
                <col style="width: 40%">
                <col style="width: 20%">
                <col style="width: 20%">
            </colgroup>
            <thead class="thead-dark">
                <tr>
                    <th>Course Name</th>
                    <th>Professor</th>
                    <th>Price</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr class="clickable-row" onclick="location.href='@Url.Action("Details", "Course", new { id = item.CourseId })'">
                        <td>@Html.DisplayFor(modelItem => item.CourseName)</td>
                        <td>@Html.DisplayFor(modelItem => item.Professor.FirstName) @Html.DisplayFor(modelItem => item.Professor.LastName)</td>
                        <td>@Html.DisplayFor(modelItem => item.Price) @Html.DisplayFor(modelItem => item.Currency)</td>
                    </tr>
                }

            </tbody>

        </table>
    </div>
</body>
</html>
